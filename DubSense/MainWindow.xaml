<Window x:Class="DubSense.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Background="Transparent"
        Title="DubSense"
        Width="540"
        Height="260"
        ResizeMode="CanMinimize">

    <Window.Resources>
        <!-- ToggleButton Style with Rounded Corners and Gradient Background -->
        <Style TargetType="ToggleButton" x:Key="RoundedToggleButtonStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                        <GradientStop Color="#FF847AF4"/>
                        <GradientStop Color="#FFB279F0" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    CornerRadius="4" 
                                    BorderBrush="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFB279F0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF847AF4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsChecked, ElementName=AutoMonitorCheckBox}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Button Style with Rounded Corners and Gradient Background -->
        <Style TargetType="Button" x:Key="RoundedButtonStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                        <GradientStop Color="#FF847AF4"/>
                        <GradientStop Color="#FFB279F0" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    CornerRadius="4" 
                                    BorderBrush="Transparent">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFB279F0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF847AF4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox Style with Rounded Corners -->
        <Style TargetType="TextBox" x:Key="RoundedTextBoxStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#272537"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <!-- TextBlock Style for MouseOver Effect -->
        <Style TargetType="TextBlock" x:Key="SettingsTextBlockStyle">
            <Setter Property="Foreground" Value="#FF73708C"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FFCCCCCC"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border Background="#FF1A1925" CornerRadius="0,0,8,8">
        <Grid>
            <!-- Define Row Definitions -->
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="170" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Grid.Row="0" Grid.Column="0" Background="#FF1A1925" Padding="0">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5">
                    <Image Source="Assets/DubSense_200x136.png" Stretch="None" Margin="5,5,5,60"/>
                    <CheckBox x:Name="AutoMonitorCheckBox" Content="Auto Monitor CoD" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Cursor="Hand"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE713;" FontSize="22" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5" Cursor="Hand" MouseLeftButtonUp="SettingsButton_Click" Style="{StaticResource SettingsTextBlockStyle}"/>
                        <ToggleButton Name="MonitorToggleButton" Content="Start" Width="110" Style="{StaticResource RoundedToggleButtonStyle}" 
                      Checked="MonitorToggleButton_Checked" Unchecked="MonitorToggleButton_Unchecked" Cursor="Hand" />
                    </StackPanel>
                </StackPanel>
            </Border>
            <Border Grid.Row="0" Grid.Column="1" Background="#FF2B2842" CornerRadius="8" Padding="0" Margin="8,8,8,8">
                <!-- Image Display -->
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5">
                        <TextBlock Name="StatusBlock" Text="Status:" Foreground="White" Margin="5,5,0,5" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="20" FontWeight="Light" />
                        <TextBlock Name="StatusTextBlock" Text="Idle" Foreground="White" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="20" />
                    </StackPanel>
                    <Image Name="CapturedImage" Stretch="Uniform" Width="260"  Margin="5" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=ViewCaptureCheckBox}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </StackPanel>
            </Border>

            <!-- Settings Popup -->
            <Popup x:Name="SettingsPopup" Placement="Center" StaysOpen="False" AllowsTransparency="True">
                <Border Background="#FF1A1925" CornerRadius="8" Padding="10" Margin="8" BorderBrush="#272537" BorderThickness="2.5">
                    <Border.Effect>
                        <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="5" Opacity="0.5"/>
                    </Border.Effect>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5">
                        <CheckBox x:Name="AutoStartCheckBox" Content="Start with Windows" Margin="5" Foreground="White" 
                      Checked="AutoStartCheckBox_Checked" Unchecked="AutoStartCheckBox_Unchecked" VerticalAlignment="Center" Cursor="Hand"/>
                        <CheckBox x:Name="ViewCaptureCheckBox" Content="View captures" Margin="5" VerticalAlignment="Center" Foreground="White"
                      Checked="ViewCaptureCheckBox_Checked" Unchecked="ViewCaptureCheckBox_Unchecked" Cursor="Hand"/>
                        <!-- Webhook URL Input -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                            <Label Content="Webhook URL:" Foreground="White" Margin="5" VerticalAlignment="Center" />
                            <TextBox Name="WebhookUrlTextBox" Width="260" VerticalAlignment="Center" Style="{StaticResource RoundedTextBoxStyle}"/>
                            <Button Name="TestButton" Width="40" Content="Test" Style="{StaticResource RoundedButtonStyle}" Click="TestButton_Click" Cursor="Hand" />
                        </StackPanel>
                        <Button Content="Close" Click="CloseSettingsButton_Click" Style="{StaticResource RoundedButtonStyle}" Cursor="Hand" Margin="5"/>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
    </Border>
</Window>
